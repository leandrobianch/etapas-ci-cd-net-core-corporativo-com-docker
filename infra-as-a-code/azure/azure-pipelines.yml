trigger:
- master
pr: none
variables: 
  - group: etapas-ci-cd-net-core-corporativo-com-docker
  - name : VERSION_NUMBER
    value: '$(Build.BuildNumber)'
  - name : RESOURCE_NAME
    value: 'resource-name-etapas-ci-cd-net-core-corporativo-com-docker'
  - name : PLAN_NAME
    value: 'plan-name-etapas-ci-cd-net-core-corporativo-com-docker'
  - name : APPLICATION_NAME
    value: 'app-name-etapas-ci-cd-net-core-corporativo-com-docker'
  - name : IMAGE_NAME
    value: 'leandrobianch/etapas-ci-cd-net-core-corporativo-com-docker'
stages:
- stage: buildTestes
  displayName: "Build, Sonar e Testes"
  jobs:
  - job: execute_build
    displayName : "Executar build da imagem com restore, testes e integração com sonar"
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Bash@3
      displayName: 'Validar Variáveis'
      inputs:
          targetType: 'inline'
          script: |
              echo 'ls $(Build.SourcesDirectory)'
              echo 'ls $Build.SourcesDirectory'
              echo $DOCKER_REGISTRY_SERVER_USERNAME
              echo $(DOCKER_REGISTRY_SERVER_USERNAME)
    - task: Bash@3
      displayName: Restore, Build e execução de testes e integração com sonar
      inputs:
        filePath: 'infra-as-a-code/ci-rotinas.sh'
        workingDirectory: '$(Build.SourcesDirectory)'
        failOnStderr: true
    - task: Docker@2
      displayName: 'Push imagem docker'
      inputs:
        containerRegistry: 'DockerHub'
        repository: '$(Build.Repository.Name)'
        command: 'push'
        tags: |
          $(Build.BuildNumber) 
          latest
- stage: Producao
  dependsOn: buildTestes
  jobs:
  - job: deploy_production
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: none
    - task: Bash@3
      displayName: Publicação e deploy
      inputs:
        filePath: 'infra-as-a-code/cd-rotinas.sh'
        workingDirectory: '$(Build.SourcesDirectory)'
        failOnStderr: true